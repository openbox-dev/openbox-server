// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// MAIN TABLES

model User {
  id               Int                @id @default(autoincrement())
  firstname        String             @db.Text
  lastname         String             @db.Text
  mail             String             @unique @db.Text

  authentication   Authentication?    @relation(name: "UserToAuthentication")
  eventparticipant EventParticipant[] @relation(name: "UserToEventParticipant")
  box_admin        Box_admin[]        @relation(name: "UserToBox_admin")

  role             Role               @default(STUDENT)
}

model Authentication {
  id          Int       @id @default(autoincrement())
  token       String    @db.VarChar(256)
  token_start DateTime? @db.Timestamp()
  token_end   DateTime? @db.Timestamp()
  userId      Int       @unique

  user        User      @relation(name: "UserToAuthentication", fields: [userId], references: [id])
}

model Event {
  id               Int                @id @default(autoincrement())
  boxId            Int

  eventparticipant EventParticipant[] @relation(name: "EventToEventParticipant")
  box              Box                @relation(name: "BoxToEvent", fields: [boxId], references: [id])
  eventressource   EventRessource?    @relation(name: "EventToEventRessource")
}

model Box {
  id          Int        @id @default(autoincrement())
  name        String     @db.Text
  description String     @db.Text
  imageUrl    String?    @db.Text

  event       Event[]    @relation(name: "BoxToEvent")
  box_admin   Box_admin? @relation(name: "BoxToBox_admin")

  status      BoxStatus
}

// JOIN TABLES
model Box_admin {
  id     Int  @id @default(autoincrement())
  userId Int
  boxId  Int  @unique

  user   User @relation(name: "UserToBox_admin", fields: [userId], references: [id])
  box    Box  @relation(name: "BoxToBox_admin", fields: [boxId], references: [id])
}

model EventRessource {
  id           Int    @id @default(autoincrement())
  ressourceUrl String @db.Text
  eventId      Int    @unique

  event        Event  @relation(name: "EventToEventRessource", fields: [eventId], references: [id])
}

// ENUMS

model EventParticipant {
  id      Int                 @id @default(autoincrement())
  userId  Int
  eventId Int

  event   Event               @relation(name: "EventToEventParticipant", fields: [eventId], references: [id])
  user    User                @relation(name: "UserToEventParticipant", fields: [userId], references: [id])
  
  status  ParticipationStatus
}

enum Role {
  ANIMATOR
  MEDIATOR
  STUDENT
}

enum BoxStatus {
  ACCEPTED
  REFUSED
  PENDING
}

enum ParticipationStatus {
  PRESENT
  INTERESTED
  NOT_INTERESTED
}
